
/*
	자바 과제3 : (식당) 대기번호 발행 프로그램
	- 문법 : 변수 , 입출력함수 , 연산자 , 제어문(조건문/반복문)
	- 전화번호 , 인원수 를 입력받아서 저장·출력 구현
	- 총 대기명단은 3개 까지 가능하다. 대기명단 1개당 전화번호·인원수 저장소(변수) 2개 필요 , 대기명단3개 --> 변수 6개 필요.
	제출 : 카카오톡방에 과제 코드가 존재하는 본인 git 상세주소 제출
*/
package boardService.step2_test;

import java.util.Scanner;

/*
[JAVA] 실습9 : 식당 대기번호 프로그램 (배열 활용)
[ 목표 ]
실습7에서 변수로 관리하던 식당 대기 명단 데이터를 배열로 전환하여, 보다 효율적이고 확장성 있는 프로그램을 구현합니다. for 반복문을 이용한 배열 순회 및 데이터 처리에 대한 이해를 심화합니다.

[ 요구사항 ]

대기 명단 저장소 확장 (배열 도입)

String 타입 배열과 int 타입 배열을 각각 하나씩 선언하여, '전화번호'와 '인원수'를 저장할 공간을 만듭니다.

String[] phoneNumbers = new String[100];

int[] counts = new int[100];

이 배열들은 최대 100팀의 대기 명단을 저장할 수 있습니다.

메인 프로그램 흐름 구현하기

for(;;) 무한루프를 사용하여 프로그램이 계속 실행되도록 합니다.

사용자에게 1.대기 등록 | 2.대기 현황 메뉴를 보여주고, Scanner로 원하는 기능의 번호를 입력받습니다.

기능 1: 대기 등록 (배열 순회 및 저장)

사용자로부터 '전화번호'와 '인원수'를 입력받습니다.

for문을 사용하여 0번 인덱스부터 99번 인덱스까지 순회합니다.

if문으로 현재 인덱스(phoneNumbers[i])가 null인지(비어있는지) 검사합니다.

만약 비어있는 공간을 찾았다면, 해당 인덱스에 입력받은 전화번호와 인원수를 저장합니다.

저장에 성공하면, 더 이상 빈 공간을 찾을 필요가 없으므로 break를 이용해 for문을 즉시 탈출합니다.

**boolean 타입의 스위치 변수(예: isRegistered)**를 활용하여 등록 성공 여부를 판단합니다.

for문 시작 전에 false로 초기화합니다.

저장에 성공하고 break 하기 직전에 true로 변경합니다.

for문이 끝난 후, 스위치 변수 값을 확인하여 "[안내] 대기 등록 완료" 또는 "[경고] 대기 명단이 가득 찼습니다." 메시지를 출력합니다.

기능 2: 대기 현황 보기 (배열 전체 조회)

for문을 사용하여 0번 인덱스부터 99번 인덱스까지 전체 배열을 순회합니다.

if문으로 현재 인덱스(phoneNumbers[i])가 null이 아닌(대기 팀이 존재하는) 경우에만, 해당 인덱스의 전화번호와 인원수를 형식에 맞게 출력합니다.

[ 실행 예시 ]

=========== 맛집 대기 시스템 v2.0 ===========
  1.대기 등록 | 2.대기 현황
===========================================
선택 > 1
전화번호 : 010-1234-5678
인원수 : 2
[안내] 대기 등록 완료

=========== 맛집 대기 시스템 v2.0 ===========
  1.대기 등록 | 2.대기 현황
===========================================
선택 > 1
전화번호 : 010-8765-4321
인원수 : 4
[안내] 대기 등록 완료

=========== 맛집 대기 시스템 v2.0 ===========
  1.대기 등록 | 2.대기 현황
===========================================
선택 > 2
============= 대기 현황 =============
대기번호 1. 연락처: 010-1234-5678 - 인원: 2명
대기번호 2. 연락처: 010-8765-4321 - 인원: 4명
*/


public class WaitingService2 {

}
