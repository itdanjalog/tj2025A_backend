
/*
	자바 과제3 : (식당) 대기번호 발행 프로그램
	- 문법 : 변수 , 입출력함수 , 연산자 , 제어문(조건문/반복문)
	- 전화번호 , 인원수 를 입력받아서 저장·출력 구현
	- 총 대기명단은 3개 까지 가능하다. 대기명단 1개당 전화번호·인원수 저장소(변수) 2개 필요 , 대기명단3개 --> 변수 6개 필요.
	제출 : 카카오톡방에 과제 코드가 존재하는 본인 git 상세주소 제출
*/
package boardService.step1_변수;

import java.util.Scanner;

/*
[ 제출방법 ] 코드가 작성된 파일이 위치한 깃허브 상세 주소를 제출하시오.

[JAVA] 종합과제1 : 식당 대기번호 프로그램 (변수 활용)
[ 목표 ] Scanner, for(;;), if 문과 변수를 활용하여, 최대 3팀의 대기 명단을 관리할 수 있는 간단한 식당 대기번호 발행 프로그램을 구현합니다.
[ 요구사항 ]
    1. 대기 명단 저장 공간 만들기
        · 최대 3팀의 대기 명단을 저장할 수 있어야 합니다.
        · 각 대기 팀은 '전화번호'와 '인원수' 정보를 가집니다.
        · 총 6개의 변수(String 3개, int 3개)를 선언하여 저장 공간을 만드세요. (예: phone1, count1, phone2, count2, phone3, count3)
        · String 변수는 null로, int 변수는 0으로 초기화하여 해당 공간이 비어있음을 나타내도록 합니다.
    2. 메인 프로그램 흐름 구현하기
        · 프로그램은 24시간 운영을 가정하여 for(;;) 무한루프를 사용합니다.
        · 무한루프 안에서 사용자에게 메뉴를 보여주고, Scanner를 통해 원하는 기능의 번호를 입력받으세요.
        · 기능 1: 대기 등록 (입력값: 1)
            - 사용자가 1을 입력하면, "전화번호 : "와 "인원수 : "를 순서대로 물어보고 입력받습니다.
            - 1번 대기 공간(phone1)부터 순서대로 비어있는지(null인지) 확인합니다.
            - 가장 먼저 발견된 빈 공간에 입력받은 전화번호와 인원수를 저장하고 "[안내] 대기 등록이 완료되었습니다." 메시지를 출력합니다.
            - 만약 3개의 대기 공간이 모두 차 있다면, "[경고] 더 이상 대기 등록을 할 수 없습니다." 라는 메시지를 출력합니다.
        · 기능 2: 대기 현황 보기 (입력값: 2)
            - 사용자가 2를 입력하면, 현재 등록된 모든 대기 명단을 아래 형식으로 출력합니다.
            - 1번 대기 공간부터 3번까지, 저장 공간이 비어있지 않은(null이 아닌) 경우에만 출력합니다.
[ 실행 예시 ]
=========== 맛집 대기 시스템 ===========
  1.대기 등록 | 2.대기 현황
========================================
선택 > 1
전화번호 : 010-1234-5678
인원수 : 2
[안내] 대기 등록이 완료되었습니다.

=========== 맛집 대기 시스템 ===========
  1.대기 등록 | 2.대기 현황
========================================
선택 > 1
전화번호 : 010-8765-4321
인원수 : 4
[안내] 대기 등록이 완료되었습니다.

=========== 맛집 대기 시스템 ===========
  1.대기 등록 | 2.대기 현황
========================================
선택 > 2
============= 대기 현황 =============
1. 연락처: 010-1234-5678 - 인원: 2명
------------------------------------
2. 연락처: 010-8765-4321 - 인원: 4명
------------------------------------

=========== 맛집 대기 시스템 ===========
  1.대기 등록 | 2.대기 현황
========================================
선택 > 1
전화번호 : 010-0000-0000
인원수 : 3
[경고] 더 이상 대기 등록을 할 수 없습니다.

*/
public class WaitingService1 {
    public static void main(String[] args) { // main start
        // [5] 각 사용자에게 입력받은 값들을 저장할 변수 선언
        String phone1 = null;	int count1 = 0;
        String phone2 = null;	int count2 = 0;
        String phone3 = null;	int count3 = 0;
        while( true ) { // [1] while 반복문 , while(true){} 무한반복문 , 대기명단을 등록과출력을 24시간 하기 위해서 무한루프 사용했다.
            System.out.print("\n\n>>>>1.대기 등록 2.대기 현황 : "); // [2] 출력함수 , print() , 사용자에게 등록과 출력 메뉴를 보여준다.
            Scanner scan = new Scanner(System.in);
            int choose = scan.nextInt();// [3] 입력함수 , Scanner객체필요 , nextInt()함수 이용하하여 정수타입을 입력받아 정수타입 변수에 저장했다
            // [4] 조건문 , if(흐름조건) , 입력받은 값(메뉴선택)에 따른 흐름제어(1이면 , 2이면 )
            if( choose == 1 ) { System.out.println(">>> 대기명단 등록 >>>");
                // [5] 각 사용자에게 필요한 데이터 입력받기.
                System.out.print(">> 전화번호 : ");	String phone = scan.next();
                System.out.print(">> 인원수 : ");		int count = scan.nextInt();
                // [6] 만약에 비어 있는 명단이 있으면 각 입력받 데이터를 비어 있는 곳에 대입하기 , 비어있다 , 문자열이면 null , 숫자이면 0 판단 , 임의 판단
                if( phone1 == null ) { phone1 = phone; count1 = count; }
                else if( phone2 == null ) { phone2 = phone; count2 = count; }
                else if( phone3 == null ) { phone3 = phone; count3 = count; }
            }else if( choose == 2 ) {System.out.println(">>> 대기명단 현황 >>>");
                // [7] 만약에 비어 있지 않으면(명단이 있으면) 각각 변수값 출력하기.
                if( phone1 != null ) { System.out.printf("인원수 %d 명 , 연락처 : %s \n" , count1 , phone1 ); }
                if( phone2 != null ) { System.out.printf("인원수 %d 명 , 연락처 : %s \n" , count2 , phone2 ); }
                if( phone3 != null ) { System.out.printf("인원수 %d 명 , 연락처 : %s \n" , count3 , phone3 ); }
            }
        } // while end
    } // main end
}
